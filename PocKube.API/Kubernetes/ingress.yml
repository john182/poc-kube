apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: #{AKS_LABEL}#
  namespace: #{AKS_LABEL}#
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "#{NGINX_SSL_REDIRECT}#"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "#{NGINX_PROXY_READ_TIMEOUT}#"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "#{NGINX_PROXY_SEND_TIMEOUT}#"
    nginx.ingress.kubernetes.io/proxy-next-upstream-tries: "#{NGINX_PROXY_NEXT_UPSTREAM_TRIES}#"
    nginx.ingress.kubernetes.io/proxy-body-size: "#{NGINX_PROXY_BODY_SIZE}#"
    nginx.ingress.kubernetes.io/use-regex: "true"
spec:
  ingressClassName: #{AKS_INGRESS_CLASS_NAME}#
  rules:
  - host: #{AKS_INGRESS_HOST}#
    http:
      paths:
      - path: #{AKS_SERVICE_PATH}#
        pathType: ImplementationSpecific
        backend:
          service:
            name: #{AKS_LABEL}#
            port:
              number: #{DOCKER_EXPOSE_PORT}#